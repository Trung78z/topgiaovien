import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { API_URL } from "@/services/apiService";
import { useEffect, useState } from "react";

import { FaDeleteLeft } from "react-icons/fa6";
import Swal from "sweetalert2";

import { deleteShare, getShares } from "@/services/shareService";
import { formatContent } from "@/lib/utils";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";

export default function ShareWithFacebook() {
  const [data, setData] = useState([
    {
      id: 1,
      content:
        "ùêìùê®ÃÇÃâ ùêÇùê°ùêÆÃõÃÅùêú ùêìùê¢ùêûÃÇùêß ùêèùê°ùê®ùêßùê† ùêìùê´ùê®ùêßùê† ùêÉùê¢Ã£ùêúùê° ùêïùêÆÃ£ ùêÜùê¢ùêöÃÅùê® ùêÉùêÆÃ£ùêú ùêÇùê°ùêöÃÇÃÅùê≠ ùêãùêÆÃõùê®ÃõÃ£ùêßùê† ùêïùê®ÃõÃÅùê¢ ùüè ùêìùê´ùê¢ùêûÃ£ÃÇùêÆ ùêáùê®Ã£ùêú ùêïùê¢ùêûÃÇùêß ùêáùêöÃÄùê¢ ùêãùê®ÃÄùêßùê† ùêìùê®ùê©ùê†ùê¢ùêöùê®ùêØùê¢ùêûùêß t·ª± h√†o l√† t·ªï ch·ª©c ti√™n phong trong vi·ªác cung c·∫• ong gi·∫£ng d·∫°y v√† d·ªãch v·ª• kh√°ch h√†ng. Ch√∫ng t√¥i kh√¥ng ng·ª´ng n·ªó l·ª±c ƒë·ªÉ c·∫£i ti·∫øn",
      image: null,
      link: "https://www.facebook.com/share/p/zgSBwDyAT1Gg6eyX/",
      active: false,
      createdAt: "2024-08-23T05:39:28.967Z",
      updatedAt: "2024-08-23T05:39:28.967Z",
      userId: "9f9a17c5-e75f-4c7b-9408-44b404b7d197",
      User: {
        fullName: "ƒê·ªó T∆∞·ªùng Ph∆∞∆°ng Uy√™n",
      },
    },
  ]);

  useEffect(() => {
    const fetch = async () => {
      try {
        const res = await getShares();
        setData(res.msg);
      } catch (error) {
        console.log(error);
      }
    };
    fetch();
  }, []);

  const handleDelete = async (id) => {
    const result = await Swal.fire({
      title: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i n√†y?",
      text: "H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      reverseButtons: true,
      cancelButtonColor: "#d33",
      confirmButtonText: "X√≥a",
      cancelButtonText: "H·ªßy",
    });
    if (result.isConfirmed) {
      try {
        await deleteShare(id);
        Swal.fire({
          icon: "success",
          title: "X√≥a th√†nh c√¥ng!",
          showConfirmButton: false,
          timer: 1000,
        });
        const update = data.filter((item) => item.id !== id);
        setData(update);
      } catch (error) {
        console.log(error);
      }
    }
  };

  return (
    <>
      <div className="space-y-4 px-2">
        <h1 className="title text-center text-2xl text-primary-500">
          Danh s√°ch share c·ªßa <span className="text-yellow-500">Top</span>
          GiaoVien
        </h1>{" "}
        <div className="flex items-center justify-end">
          <Link to="/share-facebook/them">
            <Button>Th√™m b√†i chia s·∫ª</Button>
          </Link>
        </div>
        <div className="content-scroll relative max-h-[60vh] min-h-[60vh] overflow-y-auto">
          <Table>
            <TableCaption>A list of your share TopGiaoVien .</TableCaption>
            <TableHeader>
              <TableRow>
                <TableHead className="text-[16px] font-medium">ID</TableHead>
                <TableHead className="text-[16px] font-medium">Title</TableHead>
                <TableHead className="text-[16px] font-medium">
                  Link b√†i share
                </TableHead>
                <TableHead className="text-[16px] font-medium">
                  H√¨nh ·∫£nh
                </TableHead>{" "}
                <TableHead className="text-[16px] font-medium">
                  Tr·∫°ng th√°i
                </TableHead>{" "}
                <TableHead className="text-[16px] font-medium">
                  Gi√°o vi√™n
                </TableHead>
                <TableHead className="text-[16px] font-medium">
                  Option
                </TableHead>
              </TableRow>
            </TableHeader>

            <TableBody className="max-h-[65vh]">
              {data.map((item, key) => (
                <TableRow key={item?.id}>
                  <TableCell className="font-medium">{key + 1}</TableCell>
                  <TableCell className="font-medium">
                    {formatContent(item?.content, 20)}
                  </TableCell>
                  <TableCell className="font-medium">
                    {formatContent(item?.link, 20)}
                  </TableCell>
                  <TableCell className="font-medium">
                    {item?.image ? (
                      <a
                        href={`${API_URL}/api/file/share/${item?.image}`}
                        target="_blank"
                      >
                        H√¨nh ·∫£nh
                      </a>
                    ) : (
                      "Ch∆∞a c√≥ h√¨nh ·∫£nh"
                    )}
                  </TableCell>{" "}
                  <TableCell className="font-medium">
                    {item?.active === true ? "ƒê√£ k√≠ch ho·∫°t" : "Ch∆∞a k√≠ch ho·∫°t"}
                  </TableCell>{" "}
                  <TableCell className="font-medium">
                    {item.teacher ? item.teacher.name : <>T·∫•t c·∫£</>}
                  </TableCell>
                  <TableCell className="flex flex-shrink-0 items-center gap-1 font-medium">
                    <FaDeleteLeft
                      className="h-4 w-4 cursor-pointer text-red-500"
                      onClick={() => handleDelete(item.id)}
                    />
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </div>
    </>
  );
}
